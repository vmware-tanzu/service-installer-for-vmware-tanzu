apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: git-commit-task
spec:
  workspaces:
    - name: task-shared-data
  params:
    - name: imagename
      description: the operand image
    - name: branch
      description: the branch to clone from
      default: alpha
    - name: imagepullpolicy
      description: imagepullpolicy for operand image("Always", "IfNotPresent", "Never")
  steps:
    - name: run-git-commit
      image: $(params.imagename)
      imagePullPolicy: $(params.imagepullpolicy)
      script: |
        cd /workspace/task-shared-data
        set -x
        dst_dir=`pwd`

        git config --global user.email tektonuser@sivt.com
        cp -rf kubeconfig-repo/.config/tanzu/config.yaml arcas-tekton-cicd/kubeconfig-repo/.config/tanzu/config.yaml
        cp -rf kubeconfig-repo/.kube/config arcas-tekton-cicd/kubeconfig-repo/.kube/config
        cp -rf kubeconfig-repo/.kube-tkg/config arcas-tekton-cicd/kubeconfig-repo/.kube-tkg/config
        cp deployment-state/state.yml  arcas-tekton-cicd/deployment-state/state.yml
        cd arcas-tekton-cicd
        git add kubeconfig-repo/.config/tanzu/config.yaml
        git add kubeconfig-repo/.kube/config
        git add kubeconfig-repo/.kube-tkg/config
        git add deployment-state/state.yml
        git commit -m "kube cfg uploaded"
        git push origin $(params.branch)
