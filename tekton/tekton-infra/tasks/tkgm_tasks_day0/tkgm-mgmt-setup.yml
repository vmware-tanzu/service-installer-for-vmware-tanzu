apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mgmt-create
spec:
  workspaces:
    - name: task-shared-data
  params:
    - name: imagename
      description: the operand image

  steps:
    - image: $(params.imagename)
      name: step-mgmt-setup
      imagePullPolicy: "Never"
      env:
        # Connect to the sidecar over TCP, with TLS.
        - name: DOCKER_HOST
          value: tcp://localhost:2376
        # Verify TLS.
        - name: DOCKER_TLS_VERIFY
          value: '1'
        # Use the certs generated by the sidecar daemon.
        - name: DOCKER_CERT_PATH
          value: /certs/client
      script: |
        ls -l
        cd /workspace/task-shared-data
        rm -rf /root/.config
        mkdir -p /root/.config/tanzu
        cp -rf /workspace/task-shared-data/kubeconfig-repo/kube/config /root/.kube/config
        cp -rf /workspace/task-shared-data/kubeconfig-repo/kube-tkg/config /root/.kube-tkg/config
        cp -rf  /workspace/task-shared-data/kubeconfig-repo/config/tanzu/config.yaml /root/.config/tanzu/config.yaml
        cp -rf  /workspace/task-shared-data/arcas-tekton-cicd/scripts/common/kind_tkg.yaml .
        
        python arcas-tekton-cicd/scripts/__main__.py --root-dir=/workspace/task-shared-data mgmt deploy
        rc=$?
        if [ "$rc" != "0" ]; then
              echo "Issues encountered in task...";
              cp -rf /root/.kube/config /workspace/task-shared-data/kubeconfig-repo/kube/config
              cp -rf /root/.kube-tkg/config /workspace/task-shared-data/kubeconfig-repo/kube-tkg/config
              cp -rf /root/.config/tanzu/config.yaml /workspace/task-shared-data/kubeconfig-repo/config/tanzu/config.yaml
              exit -1;
        fi
        echo -e "\n ================"
        echo -e "\nkubeconfig\n"
        cat /root/.kube/config
        echo -e "\n ================"
        echo -e "\ntkg config \n"
        cat /root/.kube-tkg/config
        echo -e "\n ================"
        echo -e "\ntkg config new \n"
        cat /root/.config/tanzu/config.yaml
        echo -e "\n copy  file to workspace ================"
        #'/workspace/task-shared-data/kubeconfig-repo
        
        cp -rf /root/.kube/config /workspace/task-shared-data/kubeconfig-repo/kube/config
        cp -rf /root/.kube-tkg/config /workspace/task-shared-data/kubeconfig-repo/kube-tkg/config
        cp -rf /root/.config/tanzu/config.yaml /workspace/task-shared-data/kubeconfig-repo/config/tanzu/config.yaml


      volumeMounts:
        - mountPath: /certs/client
          name: dind-certs

  sidecars:
    - image: docker:dind
      name: mgmtserver
      imagePullPolicy: "Never"
      args:
        - --storage-driver=vfs
        - --userland-proxy=false
      securityContext:
        privileged: true
      env:
        # Write generated certs to the path shared with the client.
        - name: DOCKER_TLS_CERTDIR
          value: /certs
      volumeMounts:
        - mountPath: /certs/client
          name: dind-certs

      # Wait for the dind daemon to generate the certs it will share with the
      # client.
      readinessProbe:
        periodSeconds: 1
        exec:
          command: [ 'ls', '/certs/client/ca.pem' ]
  volumes:
    - name: dind-certs
      emptyDir: { }


