apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: tkgs-extns-setup
spec:
  workspaces:
    - name: task-shared-data
  params:
    - name: imagename
      description: the operand image

  steps:
    - image: $(params.imagename)
      name: step-tkgs-extns-setup
      imagePullPolicy: "Never"
      env:
        # Connect to the sidecar over TCP, with TLS.
        - name: "KUBECONFIG"
          value: "/root/.kube/config"
        # Verify TLS.
        - name: DOCKER_TLS_VERIFY
          value: '1'
        # Use the certs generated by the sidecar daemon.
        - name: DOCKER_CERT_PATH
          value: /certs/client
      script: |
        ls -l
        cd /workspace/task-shared-data
        rm -rf /root/.config
        mkdir -p /root/.config/tanzu
        python arcas-tekton-cicd/scripts/__main__.py --root-dir=/workspace/task-shared-data extns deploy
        rc=$?
        if [ "$rc" != "0" ]; then
            echo "Issues encountered in task...";
            exit -1;
        fi
      volumeMounts:
        - mountPath: /certs/client
          name: dind-certs

  sidecars:
    - image: docker:dind
      name: sidecar-extnsserver
      imagePullPolicy: "Never"
      args:
        - --storage-driver=vfs
        - --userland-proxy=false
      securityContext:
        privileged: true
      env:
        # Write generated certs to the path shared with the client.
        - name: DOCKER_TLS_CERTDIR
          value: /certs
      volumeMounts:
        - mountPath: /certs/client
          name: dind-certs
      # Wait for the dind daemon to generate the certs it will share with the
      # client.
      readinessProbe:
        periodSeconds: 1
        exec:
          command: [ 'ls', '/certs/client/ca.pem' ]
  volumes:
    - name: dind-certs
      emptyDir: { }
